{
  "swagger": "2.0",
  "info": {
    "title": "IMN System API  - DEV",
    "description": "# The REST API of IMN system - SYSTEM\r\n## Overview\r\nThe REST APIs provide programmatic access to read and write IMN data. \r\n\r\n\r\n## Things to keep in mind\r\n### API Rate Limits\r\n- The IMN REST API is limited to 100 calls/minute.\r\n\r\n### Media type\r\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\r\n\r\n### Required content type\r\nThe required and default encoding for the request and responses is UTF8.\r\n\r\n### Required date time format\r\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\r\n\r\n### Base URL\r\nAll URLs returned by the IMN API are relative to this base URL, and all requests to the REST API must use this base URL template.\r\n\r\nYou can test our API on https://system-api-docs.imn.io/swagger-ui\r\n\r\n",
    "version": "1.0",
    "contact": {
      "email": "support@imn.io"
    },
    "license": {
      "name": "IMN",
      "url": "https://go.imn.io"
    },
    "x-changeComment": "No change. Server side regeneration.\n",
    "x-logo": {
      "url": "https://imngo.blob.core.windows.net/imngo/images/imn-logo.png",
      "backgroundColor": "#FFFFFF"
    }
  },
  "host": "api.imn.io",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "System API - List of Values - LOV",
      "x-displayName": "LOV"
    },
    {
      "name": "System - Merchants - Merchants",
      "x-displayName": "Merchants"
    },
    {
      "name": "System - Marketplaces - Marketplaces",
      "x-displayName": "Marketplaces"
    }
  ],
  "paths": {
    "/system/lov/v1/": {
      "get": {
        "summary": "Get all list names",
        "operationId": "GetUserLovIndex",
        "tags": [
          "System API - List of Values - LOV"
        ],
        "responses": {
          "200": {
            "description": "Get the list names",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userLovIndex"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/system/lov/v1/{listName}": {
      "get": {
        "tags": [
          "System API - List of Values - LOV"
        ],
        "summary": "Get the list of values related to this list name",
        "operationId": "GetUserListOfValues",
        "parameters": [
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The list of value name your want to get",
            "type": "string"
          },
          {
            "$ref": "#/parameters/acceptLanguageParameter'"
          },
          {
            "$ref": "#/parameters/ifNoneMatchParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of values",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              },
              "Content-Language": {
                "description": "Indicates the language use in the response",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userListOfValuesResponse"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage'"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/system/merchants/v1/": {
      "post": {
        "tags": [
          "System - Merchants - Merchants"
        ],
        "summary": "Get the list of merchants related to a marketplace",
        "operationId": "GetMerchantList",
        "parameters": [
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter'"
          },
          {
            "$ref": "#/parameters/pageNumberQueryStringParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/merchantList"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/system/merchants/v1/{merchantCode}/targetMarketplaces": {
      "post": {
        "tags": [
          "System - Merchants - Merchants"
        ],
        "summary": "Get the list of marketplace for a merchant",
        "operationId": "GetMerchantTargetMarketplaceList",
        "parameters": [
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The key is the marketplace code",
              "additionalProperties": {
                "$ref": "#/definitions/merchantTargetMarketplaceInfo"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/system/marketplaces/v1/": {
      "get": {
        "tags": [
          "System - Marketplaces - Marketplaces"
        ],
        "summary": "Get the list of marketplace",
        "operationId": "GetMarketplaceList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/marketplaceList"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    }
  },
  "definitions": {
    "userLovIndex": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userLovIndexLinks"
        }
      }
    },
    "userLovIndexLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserLovIndexLink"
        },
        "lists": {
          "$ref": "#/definitions/userLovLinks"
        }
      }
    },
    "userLovLinks": {
      "description": "List of lov link. The key is the list name.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/links.GetUserListOfValuesLink"
      }
    },
    "links.GetUserListOfValuesLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        },
        {
          "example": {
            "href": "/v1/user/lov/Go2CultureName",
            "method": "GET"
          }
        }
      ]
    },
    "links.GetUserLovIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        },
        {
          "example": {
            "href": "/v1/user/lov",
            "method": "GET"
          }
        }
      ]
    },
    "userListOfValuesResponse": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userListOfValuesResponseLinks"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listOfValueItem'"
          }
        }
      }
    },
    "userListOfValuesResponseLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserListOfValuesLink"
        }
      }
    },
    "merchantListRequest": {
      "type": "object",
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/merchantListOrderBy"
        },
        "searchMarketplaceCode": {
          "type": "string",
          "description": "Search merchants by the marketplace code",
          "example": "C1"
        },
        "searchMarketplaceName": {
          "type": "string",
          "description": "Search merchants by the marketplace name",
          "example": "cdis"
        },
        "searchCompanyName": {
          "type": "string",
          "description": "Search merchants by the company name",
          "example": "Literie"
        },
        "searchMerchantCode": {
          "type": "string",
          "description": "Search merchants by the code",
          "example": "MLT"
        },
        "searchMarketplaceMerchantCode": {
          "type": "string",
          "description": "Search merchants by the marketplaceMerchantCode",
          "example": "050041"
        },
        "searchContactEmail": {
          "type": "string",
          "description": "Search merchants by the contactEmail",
          "example": "contact@ma-boutique-en-ligne.com"
        },
        "searchContactName": {
          "type": "string",
          "description": "Search merchants by the contact name",
          "example": "Johnson"
        },
        "searchContactPhone": {
          "type": "string",
          "description": "Search merchants by the ContactPhone",
          "example": "+33711223344"
        },
        "filterCreationUtcDateFrom": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by From beginning creation date"
        },
        "filterCreationUtcDateTo": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by to ending creation date"
        },
        "filterCountry": {
          "$ref": "#/definitions/countryIsoCodeAlpha3'"
        },
        "filterSalesforceStatus": {
          "type": "boolean",
          "description": "filter merchants by SalesforceStatus"
        },
        "filterSourceMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode'"
        },
        "filterSourceMarketplaceCredentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus'"
        }
      }
    },
    "merchantListOrderBy": {
      "type": "object",
      "required": [
        "propertyName"
      ],
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/merchantListOrderByOn"
        },
        "sort": {
          "$ref": "#/definitions/sort'"
        }
      }
    },
    "merchantListOrderByOn": {
      "type": "string",
      "description": "Indicates on which property you want to order by the list of merchant",
      "default": "modificationUtcDate",
      "enum": [
        "merchantCode",
        "creationUtcDate",
        "modificationUtcDate"
      ]
    },
    "merchantList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/merchantListLinks"
        },
        "merchants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/merchantInfo"
          }
        },
        "paginationResult": {
          "$ref": "#/definitions/paginationResult'"
        }
      }
    },
    "merchantListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetMerchantListLink"
        }
      }
    },
    "links.GetMerchantListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        }
      ]
    },
    "merchantInfo": {
      "type": "object",
      "required": [
        "code",
        "email",
        "companyName",
        "country",
        "firstName",
        "lastName",
        "phoneNumber",
        "creationUtcDate",
        "orderCount",
        "turnOver"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/merchantCode'"
        },
        "email": {
          "$ref": "#/definitions/email'"
        },
        "companyName": {
          "$ref": "#/definitions/merchantCompanyName'"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3'"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "creationUtcDate": {
          "type": "string",
          "format": "date-time"
        },
        "importedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported offer count from the source marketpalce"
        },
        "sourceMarketplaceMerchantCode": {
          "$ref": "#/definitions/marketplaceMerchantCode'"
        },
        "salesForceStatus": {
          "type": "boolean",
          "description": "Sales Force status id"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus'"
        },
        "targetMarketplaceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The target marketplace count of this merchant"
        },
        "sourceMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode'"
        }
      }
    },
    "merchantTargetMarketplaceInfo": {
      "type": "object",
      "required": [
        "subscriptionRequestUtcDate",
        "subscriptionStatus",
        "credentialStatus",
        "shippingSettingsStatus",
        "offerPublicationEnabled",
        "targetMarketplaceCode"
      ],
      "properties": {
        "subscriptionRequestUtcDate": {
          "type": "string",
          "format": "date-time",
          "description": "date the merchant pushed his registration to the marketplace (through SF)"
        },
        "subscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus'"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus'"
        },
        "shippingSettingsStatus": {
          "$ref": "#/definitions/marketplaceShippingSettingsStatus'"
        },
        "offerPublicationStatus": {
          "$ref": "#/definitions/marketplaceOfferPublicationStatus'"
        },
        "publishedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Effective offer count published to the target marketplace"
        },
        "publishableOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Publishable offer count to the target marketplace"
        },
        "orderCount": {
          "type": "integer",
          "format": "int32",
          "description": "onrder count on the target marketplace"
        },
        "targetMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode'"
        },
        "targetMarketplaceMerchantCode": {
          "type": "string",
          "description": "the tarket marketplace merchant code ??"
        },
        "turnOver": {
          "type": "number",
          "format": "decimal",
          "example": "10602.23"
        },
        "currencyCode": {
          "$ref": "#/definitions/currencyCode'"
        },
        "subscriptionHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceSubcriptionReporting"
          }
        }
      }
    },
    "marketplaceSubcriptionReporting": {
      "type": "object",
      "required": [
        "senderEmail",
        "utcDate",
        "status"
      ],
      "properties": {
        "senderEmail": {
          "$ref": "#/definitions/email'"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus'"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "marketplaceList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/marketplaceListLinks"
        },
        "marketplaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceSysInfo"
          }
        }
      }
    },
    "marketplaceListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetMarketplaceListLink"
        }
      }
    },
    "links.GetMarketplaceListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        }
      ]
    },
    "marketplaceApiIntegration": {
      "type": "object",
      "description": "The marketplace integration status to push their data to IMN",
      "properties": {
        "status": {
          "$ref": "#/definitions/marketplaceApiIntegrationStatus'"
        },
        "errorMessage": {
          "type": "string"
        },
        "sinceUtcDate": {
          "description": "This status has changed since",
          "type": "string",
          "format": "date-time"
        },
        "lastCheckUtcDate": {
          "description": "The last time we checked the api integration status with the marketplace",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "marketplacePushApiIntegration": {
      "type": "object",
      "description": "The marketplace integration status to received pushed data from IMN",
      "properties": {
        "backendUrl": {
          "$ref": "#/definitions/httpUrl'"
        },
        "status": {
          "$ref": "#/definitions/marketplaceApiIntegrationStatus'"
        },
        "errorMessage": {
          "type": "string"
        },
        "sinceUtcDate": {
          "description": "This status has changed since",
          "type": "string",
          "format": "date-time"
        },
        "lastCheckUtcDate": {
          "description": "The last time we checked the api integration status with the marketplace",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "marketplaceSysInfo": {
      "type": "object",
      "required": [
        "code",
        "name",
        "imageUrl",
        "status"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/marketplaceCode'"
        },
        "name": {
          "type": "string",
          "example": "Cdiscount"
        },
        "imageUrl": {
          "$ref": "#/definitions/httpUrl'"
        },
        "status": {
          "$ref": "#/definitions/marketplaceStatus'"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3'"
        },
        "merchantApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "offerImportationApiIntegration": {
          "$ref": "#/definitions/marketplaceApiIntegration"
        },
        "offerPublicationApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "orderImportationApiIntegration": {
          "$ref": "#/definitions/marketplaceApiIntegration"
        },
        "orderChangeApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "marketplaceAgentCount": {
          "type": "integer"
        },
        "importedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported offer count from the source marketplace"
        },
        "publishedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Effective offer count published to the target marketplace"
        },
        "importedOrderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported order count from the marketplace"
        },
        "sourceOrderCount": {
          "type": "integer",
          "format": "int32"
        },
        "targetOrderCount": {
          "type": "integer",
          "format": "int32"
        },
        "targetTurnOver": {
          "type": "number",
          "format": "decimal"
        },
        "sourceTurnOver": {
          "type": "number",
          "format": "decimal"
        },
        "currencyCode": {
          "$ref": "#/definitions/currencyCode'"
        },
        "targetMerchantCredentialCounter": {
          "type": "object",
          "description": "The key will be the credential status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "sourceMerchantCredentialCounter": {
          "type": "object",
          "description": "The key will be the credential status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "merchantSubscriptionCounter": {
          "type": "object",
          "description": "The key will be the subscription Status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "merchantOfferPublicationCounter": {
          "type": "object",
          "description": "The key will be the offer publication Status",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find the documentation for IMN's API here",
    "url": "https://api-docs.imn.io/"
  },
  "x-tagGroups": [
    {
      "name": "System API - List of Values",
      "tags": [
        "System API - List of Values - LOV"
      ]
    },
    {
      "name": "System - Merchants",
      "tags": [
        "System - Merchants - Merchants"
      ]
    },
    {
      "name": "System - Marketplaces",
      "tags": [
        "System - Marketplaces - Marketplaces"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  }
}