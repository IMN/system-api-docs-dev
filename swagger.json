{
  "swagger": "2.0",
  "info": {
    "title": "IMN System API  - DEV",
    "description": "# The REST API of IMN system - SYSTEM\r\n## Overview\r\nThe REST APIs provide programmatic access to read and write IMN data. \r\n\r\n\r\n## Things to keep in mind\r\n### API Rate Limits\r\n- The IMN REST API is limited to 100 calls/minute.\r\n\r\n### Media type\r\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\r\n\r\n### Required content type\r\nThe required and default encoding for the request and responses is UTF8.\r\n\r\n### Required date time format\r\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\r\n\r\n### Base URL\r\nAll URLs returned by the IMN API are relative to this base URL, and all requests to the REST API must use this base URL template.\r\n\r\nYou can test our API on https://system-api-docs.imn.io/swagger-ui\r\n\r\n",
    "version": "1.0",
    "contact": {
      "email": "contact@imnnow.com"
    },
    "license": {
      "name": "IMN",
      "url": "https://go.imn.io"
    },
    "x-changeComment": "No change. Server side regeneration.\n",
    "x-logo": {
      "url": "https://imngo.blob.core.windows.net/imngo/images/imn-logo.png",
      "backgroundColor": "#FFFFFF"
    }
  },
  "host": "api.imn.io",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "System API - List of Values - LOV",
      "x-displayName": "LOV"
    },
    {
      "name": "System - Merchants - Merchants",
      "x-displayName": "Merchants"
    },
    {
      "name": "System - Marketplaces - Marketplaces",
      "x-displayName": "Marketplaces"
    }
  ],
  "paths": {
    "/system/lov/v1/": {
      "get": {
        "summary": "Get all list names",
        "operationId": "GetUserLovIndex",
        "tags": [
          "System API - List of Values - LOV"
        ],
        "responses": {
          "200": {
            "description": "Get the list names",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userLovIndex"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/system/lov/v1/{listName}": {
      "get": {
        "tags": [
          "System API - List of Values - LOV"
        ],
        "summary": "Get the list of values related to this list name",
        "operationId": "GetUserListOfValues",
        "parameters": [
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The list of value name your want to get",
            "type": "string"
          },
          {
            "$ref": "#/parameters/acceptLanguageParameter"
          },
          {
            "$ref": "#/parameters/ifNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of values",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              },
              "Content-Language": {
                "description": "Indicates the language use in the response",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userListOfValuesResponse"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/system/merchants/v1/": {
      "post": {
        "tags": [
          "System - Merchants - Merchants"
        ],
        "summary": "Get the list of merchants related to a marketplace",
        "operationId": "GetMerchantList",
        "parameters": [
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter"
          },
          {
            "$ref": "#/parameters/pageNumberQueryStringParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/merchantListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/merchantList"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/system/merchants/v1/{merchantCode}/targetMarketplaces": {
      "post": {
        "tags": [
          "System - Merchants - Merchants"
        ],
        "summary": "Get the list of marketplace for a merchant",
        "operationId": "GetMerchantTargetMarketplaceList",
        "parameters": [
          {
            "$ref": "#/parameters/merchantCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The key is the marketplace code",
              "additionalProperties": {
                "$ref": "#/definitions/merchantTargetMarketplaceInfo"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/system/marketplaces/v1/": {
      "get": {
        "tags": [
          "System - Marketplaces - Marketplaces"
        ],
        "summary": "Get the list of marketplace",
        "operationId": "GetMarketplaceList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/marketplaceList"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    }
  },
  "definitions": {
    "userLovIndex": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userLovIndexLinks"
        }
      }
    },
    "userLovIndexLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserLovIndexLink"
        },
        "lists": {
          "$ref": "#/definitions/userLovLinks"
        }
      }
    },
    "userLovLinks": {
      "description": "List of lov link. The key is the list name.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/links.GetUserListOfValuesLink"
      }
    },
    "links.GetUserListOfValuesLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/v1/user/lov/Go2CultureName",
            "method": "GET"
          }
        }
      ]
    },
    "links.GetUserLovIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/v1/user/lov",
            "method": "GET"
          }
        }
      ]
    },
    "userListOfValuesResponse": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userListOfValuesResponseLinks"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listOfValueItem"
          }
        }
      }
    },
    "userListOfValuesResponseLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserListOfValuesLink"
        }
      }
    },
    "errorResponseMessage": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/userErrorMessage"
          }
        }
      }
    },
    "listOfValueItem": {
      "description": "This object is used by LOV apis",
      "type": "object",
      "required": [
        "codeIdentifier",
        "intIdentifier"
      ],
      "properties": {
        "position": {
          "format": "int32",
          "type": "integer",
          "example": "1"
        },
        "codeIdentifier": {
          "type": "string",
          "example": "FRA"
        },
        "translationText": {
          "type": "string",
          "example": "France"
        },
        "intIdentifier": {
          "format": "int32",
          "type": "integer",
          "example": "1"
        }
      }
    },
    "userErrorMessage": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "docUrl": {
          "$ref": "#/definitions/docUrl"
        },
        "code": {
          "$ref": "#/definitions/errorCode"
        },
        "message": {
          "type": "string",
          "description": "The error message",
          "example": "There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527\n"
        },
        "cultureName": {
          "$ref": "#/definitions/cultureName"
        },
        "arguments": {
          "$ref": "#/definitions/userErrorMessageArguments"
        }
      }
    },
    "docUrl": {
      "x-exclude": true,
      "type": "string",
      "format": "uri",
      "description": "The documentation related to this operation.",
      "example": "https://api-docs.imn.io/#operation/EnableChannelCatalog"
    },
    "errorCode": {
      "x-exclude": true,
      "type": "string",
      "description": "the error code. The error code can be a pattern containing the argument's name",
      "example": "CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)"
    },
    "cultureName": {
      "x-exclude": true,
      "type": "string",
      "description": "If the error is translated, the culture name will be indicated",
      "example": "en"
    },
    "userErrorMessageArguments": {
      "x-exclude": true,
      "type": "object",
      "description": "a dictionary string/object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "link3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "href"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "docUrl": {
          "$ref": "#/definitions/docUrl"
        },
        "description": {
          "type": "string",
          "description": "The description of the link",
          "example": "This is a description link"
        },
        "href": {
          "$ref": "#/definitions/href"
        },
        "operationId": {
          "$ref": "#/definitions/operationId"
        },
        "method": {
          "$ref": "#/definitions/httpMethod"
        },
        "parameters": {
          "$ref": "#/definitions/linkParameter3Types"
        },
        "urlTemplated": {
          "type": "boolean",
          "description": "indicates whether the href is templated or not"
        },
        "allRequiredParamsProvided": {
          "type": "boolean",
          "description": "indicates whether all required params have been provided"
        },
        "allOptionalParamsProvided": {
          "type": "boolean",
          "description": "indicates whether all optionals params have been provided"
        },
        "info": {
          "$ref": "#/definitions/infoSummaries"
        }
      }
    },
    "href": {
      "x-exclude": true,
      "type": "string",
      "example": "/merchant/orders/v1/{marketplaceCode}/{IMNOrderId}",
      "description": "Indicate the relative uri for this link"
    },
    "operationId": {
      "x-exclude": true,
      "type": "string",
      "description": "The operationId to call.",
      "example": "GetOrder"
    },
    "httpMethod": {
      "x-exclude": true,
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PATCH",
        "DELETE",
        "PUT",
        "HEAD"
      ],
      "default": "GET",
      "example": "GET",
      "description": "Indicate the http method to use on this link"
    },
    "linkParameter3Types": {
      "x-exclude": true,
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/linkParameter3"
      }
    },
    "infoSummaries": {
      "type": "object",
      "properties": {
        "successes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/successSummary"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorSummary"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warningSummary"
          }
        },
        "informations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/infoSummary"
          }
        }
      }
    },
    "linkParameter3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "in"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "value": {
          "type": "object",
          "description": "The value of the parameter. It can be an integer a string or an object.",
          "example": "1234"
        },
        "required": {
          "type": "boolean",
          "default": "false",
          "example": "true"
        },
        "in": {
          "$ref": "#/definitions/parameterIn"
        },
        "lovLink": {
          "$ref": "#/definitions/LOVLink3"
        },
        "lovRequired": {
          "type": "boolean",
          "description": "If true, you MUST indicate a value from the list of values otherwise it's a freetext",
          "example": "true"
        },
        "description": {
          "type": "string",
          "description": "description of the parameter",
          "example": "the store identifier"
        },
        "schema": {
          "type": "string",
          "description": "schema of the parameter",
          "example": "orderListRequest"
        },
        "pattern": {
          "$ref": "#/definitions/validationPattern"
        },
        "properties": {
          "description": "If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.",
          "additionalProperties": {
            "$ref": "#/definitions/linkParameterProperty3"
          }
        }
      }
    },
    "successSummary": {
      "type": "object",
      "properties": {
        "successCode": {
          "type": "string"
        },
        "successMessage": {
          "type": "string"
        },
        "successArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        }
      }
    },
    "errorSummary": {
      "type": "object",
      "properties": {
        "utcDate": {
          "format": "date-time",
          "type": "string"
        },
        "errorGuid": {
          "format": "uuid",
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "technicalErrorMessage": {
          "type": "string"
        },
        "exceptionDetail": {
          "$ref": "#/definitions/exceptionDetail"
        },
        "errorArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "warningSummary": {
      "type": "object",
      "properties": {
        "technicalErrorMessage": {
          "type": "string"
        },
        "warningMessage": {
          "type": "string"
        },
        "warningCode": {
          "type": "string"
        },
        "warningArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "infoSummary": {
      "type": "object",
      "properties": {
        "informationCode": {
          "type": "string"
        },
        "informationMessage": {
          "type": "string"
        },
        "informationArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        }
      }
    },
    "parameterIn": {
      "x-exclude": true,
      "type": "string",
      "description": "* path: if the parameter must be pass in the path uri\n* header: if the parameter must be passed in http header\n* query: if the parameter must be passed in querystring\n* body: if the parameter must be passed in the body\n* file: if the parameter must be passed in a multipart/form-data (https://swagger.io/docs/specification/2-0/file-upload/)\n",
      "example": "path",
      "enum": [
        "path",
        "header",
        "query",
        "body",
        "file"
      ]
    },
    "LOVLink3": {
      "x-exclude": true,
      "description": "Describe the way you have to follow to get access to the LOV",
      "type": "object",
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "example": "/merchant/lov/v1/Go2CultureName",
          "description": "Indicate the uri to the list of value"
        },
        "method": {
          "$ref": "#/definitions/httpMethod"
        }
      }
    },
    "validationPattern": {
      "type": "string",
      "description": "The regular expression to validate the value",
      "example": "*.-api$"
    },
    "linkParameterProperty3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "value": {
          "type": "object",
          "description": "The value of the parameter. It can be an integer a string or an object.",
          "example": "1234"
        },
        "required": {
          "type": "boolean",
          "example": "true"
        },
        "type": {
          "$ref": "#/definitions/parameterType"
        },
        "lovLink": {
          "$ref": "#/definitions/LOVLink3"
        },
        "lovRequired": {
          "type": "boolean",
          "description": "If true, you MUST use indicate a value from the list of values otherwise it's a freetext",
          "example": "true"
        },
        "description": {
          "type": "string",
          "description": "description of the parameter",
          "example": "the store identifier"
        },
        "schema": {
          "type": "string",
          "description": "schema of the parameter",
          "example": "orderListRequest"
        },
        "pattern": {
          "$ref": "#/definitions/validationPattern"
        }
      }
    },
    "exceptionDetail": {
      "type": "object",
      "properties": {
        "helpLink": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "parameterType": {
      "x-exclude": true,
      "description": "The value type of the parameter",
      "type": "string",
      "enum": [
        "string",
        "integer",
        "number",
        "boolean",
        "object",
        "array",
        "date",
        "date-time",
        "file"
      ],
      "default": "string",
      "example": "string"
    },
    "merchantListRequest": {
      "type": "object",
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/merchantListOrderBy"
        },
        "searchMarketplaceCode": {
          "type": "string",
          "description": "Search merchants by the marketplace code",
          "example": "C1"
        },
        "searchMarketplaceName": {
          "type": "string",
          "description": "Search merchants by the marketplace name",
          "example": "cdis"
        },
        "searchCompanyName": {
          "type": "string",
          "description": "Search merchants by the company name",
          "example": "Literie"
        },
        "searchMerchantCode": {
          "type": "string",
          "description": "Search merchants by the code",
          "example": "MLT"
        },
        "searchMarketplaceMerchantCode": {
          "type": "string",
          "description": "Search merchants by the marketplaceMerchantCode",
          "example": "050041"
        },
        "searchContactEmail": {
          "type": "string",
          "description": "Search merchants by the contactEmail",
          "example": "contact@ma-boutique-en-ligne.com"
        },
        "searchContactName": {
          "type": "string",
          "description": "Search merchants by the contact name",
          "example": "Johnson"
        },
        "searchContactPhone": {
          "type": "string",
          "description": "Search merchants by the ContactPhone",
          "example": "+33711223344"
        },
        "filterCreationUtcDateFrom": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by From beginning creation date"
        },
        "filterCreationUtcDateTo": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by to ending creation date"
        },
        "filterCountry": {
          "$ref": "#/definitions/countryIsoCodeAlpha3"
        },
        "filterSalesforceStatus": {
          "type": "boolean",
          "description": "filter merchants by SalesforceStatus"
        },
        "filterSourceMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "filterSourceMarketplaceCredentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        }
      }
    },
    "merchantListOrderBy": {
      "type": "object",
      "required": [
        "propertyName"
      ],
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/merchantListOrderByOn"
        },
        "sort": {
          "$ref": "#/definitions/sort"
        }
      }
    },
    "merchantListOrderByOn": {
      "type": "string",
      "description": "Indicates on which property you want to order by the list of merchant",
      "default": "modificationUtcDate",
      "enum": [
        "merchantCode",
        "creationUtcDate",
        "modificationUtcDate"
      ]
    },
    "merchantList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/merchantListLinks"
        },
        "merchants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/merchantInfo"
          }
        },
        "paginationResult": {
          "$ref": "#/definitions/paginationResult"
        }
      }
    },
    "merchantListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetMerchantListLink"
        }
      }
    },
    "links.GetMerchantListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "merchantInfo": {
      "type": "object",
      "required": [
        "code",
        "email",
        "companyName",
        "country",
        "firstName",
        "lastName",
        "phoneNumber",
        "creationUtcDate",
        "orderCount",
        "turnOver"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/merchantCode"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "companyName": {
          "$ref": "#/definitions/merchantCompanyName"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "creationUtcDate": {
          "type": "string",
          "format": "date-time"
        },
        "importedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported offer count from the source marketpalce"
        },
        "sourceMarketplaceMerchantCode": {
          "$ref": "#/definitions/marketplaceMerchantCode"
        },
        "salesForceStatus": {
          "type": "boolean",
          "description": "Sales Force status id"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        },
        "targetMarketplaceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The target marketplace count of this merchant"
        },
        "sourceMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        }
      }
    },
    "merchantTargetMarketplaceInfo": {
      "type": "object",
      "required": [
        "subscriptionRequestUtcDate",
        "subscriptionStatus",
        "credentialStatus",
        "shippingSettingsStatus",
        "offerPublicationEnabled",
        "targetMarketplaceCode"
      ],
      "properties": {
        "subscriptionRequestUtcDate": {
          "type": "string",
          "format": "date-time",
          "description": "date the merchant pushed his registration to the marketplace (through SF)"
        },
        "subscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        },
        "shippingSettingsStatus": {
          "$ref": "#/definitions/marketplaceShippingSettingsStatus"
        },
        "offerPublicationStatus": {
          "$ref": "#/definitions/marketplaceOfferPublicationStatus"
        },
        "publishedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Effective offer count published to the target marketplace"
        },
        "publishableOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Publishable offer count to the target marketplace"
        },
        "orderCount": {
          "type": "integer",
          "format": "int32",
          "description": "onrder count on the target marketplace"
        },
        "targetMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "targetMarketplaceMerchantCode": {
          "type": "string",
          "description": "the tarket marketplace merchant code ??"
        },
        "turnOver": {
          "type": "number",
          "format": "decimal",
          "example": "10602.23"
        },
        "currencyCode": {
          "$ref": "#/definitions/currencyCode"
        },
        "subscriptionHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceSubcriptionReporting"
          }
        }
      }
    },
    "marketplaceSubcriptionReporting": {
      "type": "object",
      "required": [
        "senderEmail",
        "utcDate",
        "status"
      ],
      "properties": {
        "senderEmail": {
          "$ref": "#/definitions/email"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "countryIsoCodeAlpha3": {
      "description": "The country iso code alpha 3 <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\">(ISO 3166-1_alpha-3)</a>",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "example": "FRA"
    },
    "marketplaceCode": {
      "type": "string",
      "description": "The marketplace code identifier in IMN.\nFor now we have:\n- C1 for Cdiscount\n- E1 for ePrice\n- R1 for Real.DE\n- B1 for BOL\n- E2 for eMAG\n",
      "pattern": "^([A-Z]|[0-9]){2}$",
      "x-pattern": "^([A-Z]|[0-9]){2}$",
      "example": "C1"
    },
    "marketplaceCredentialStatus": {
      "description": "The marketplace credential status",
      "type": "string",
      "enum": [
        "NotConfigured",
        "Configured",
        "Expired"
      ],
      "example": "configured"
    },
    "paginationResult": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "entryCount",
        "pageCount",
        "totalEntryCount",
        "links"
      ],
      "properties": {
        "entryCount": {
          "type": "integer",
          "description": "The entry count currently returned",
          "example": "25",
          "minimum": 0
        },
        "pageCount": {
          "type": "integer",
          "description": "The page count",
          "example": "38",
          "minimum": 0
        },
        "totalEntryCount": {
          "type": "integer",
          "description": "The total entry count",
          "example": "943",
          "minimum": 0
        },
        "links": {
          "$ref": "#/definitions/paginationResultLinks"
        }
      },
      "example": {
        "entryCount": "25",
        "pageCount": "38",
        "totalEntryCount": "943",
        "links": {
          "first": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": "25",
                  "pageNumber": "1"
                }
              }
            ]
          },
          "last": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": "25",
                  "pageNumber": "38"
                }
              }
            ]
          },
          "next": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": "25",
                  "pageNumber": "2"
                }
              }
            ]
          }
        }
      }
    },
    "marketplaceSubscriptionStatus": {
      "description": "The subscription status",
      "type": "string",
      "enum": [
        "NotRequested",
        "Requested",
        "Accepted",
        "Declined",
        "Blocked"
      ],
      "example": "Accepted"
    },
    "marketplaceShippingSettingsStatus": {
      "description": "The marketplace shipping settings status",
      "type": "string",
      "enum": [
        "NotConfigured",
        "Configured"
      ]
    },
    "marketplaceOfferPublicationStatus": {
      "description": "The Offer Importation status",
      "type": "string",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "example": "enabled"
    },
    "currencyCode": {
      "x-exclude": true,
      "description": "The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a>\n",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "example": "EUR"
    },
    "sort": {
      "x-excludeSql": "true",
      "type": "string",
      "default": "ascending",
      "enum": [
        "ascending",
        "descending"
      ]
    },
    "merchantCode": {
      "type": "string",
      "description": "The merchant code identifier in IMN",
      "pattern": "^([A-Z|0-9]){5}$",
      "x-pattern": "^([A-Z|0-9]){5}$",
      "example": "MLT01"
    },
    "email": {
      "x-exclude": true,
      "description": "The email",
      "type": "string",
      "format": "email",
      "pattern": "^(.+)@(.+)$",
      "x-pattern": "^(.+)@(.+)$",
      "example": "paulsimon@mysupercompany.com"
    },
    "merchantCompanyName": {
      "type": "string",
      "minLength": 2,
      "x-minLength": "2",
      "maxLength": 100,
      "x-maxLength": "100",
      "description": "Merchant's company name"
    },
    "marketplaceMerchantCode": {
      "type": "string",
      "description": "The merchant code for a marketplace",
      "example": "005145"
    },
    "paginationResultLinks": {
      "x-exclude": true,
      "description": "The navigation links 'first', 'last', 'next', 'previous'",
      "type": "object",
      "required": [
        "first",
        "last"
      ],
      "properties": {
        "first": {
          "$ref": "#/definitions/link3"
        },
        "last": {
          "$ref": "#/definitions/link3"
        },
        "previous": {
          "$ref": "#/definitions/link3"
        },
        "next": {
          "$ref": "#/definitions/link3"
        }
      }
    },
    "marketplaceList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/marketplaceListLinks"
        },
        "marketplaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceSysInfo"
          }
        }
      }
    },
    "marketplaceListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetMarketplaceListLink"
        }
      }
    },
    "links.GetMarketplaceListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "marketplaceApiIntegration": {
      "type": "object",
      "description": "The marketplace integration status to push their data to IMN",
      "properties": {
        "status": {
          "$ref": "#/definitions/marketplaceApiIntegrationStatus"
        },
        "errorMessage": {
          "type": "string"
        },
        "sinceUtcDate": {
          "description": "This status has changed since",
          "type": "string",
          "format": "date-time"
        },
        "lastCheckUtcDate": {
          "description": "The last time we checked the api integration status with the marketplace",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "marketplacePushApiIntegration": {
      "type": "object",
      "description": "The marketplace integration status to received pushed data from IMN",
      "properties": {
        "backendUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "status": {
          "$ref": "#/definitions/marketplaceApiIntegrationStatus"
        },
        "errorMessage": {
          "type": "string"
        },
        "sinceUtcDate": {
          "description": "This status has changed since",
          "type": "string",
          "format": "date-time"
        },
        "lastCheckUtcDate": {
          "description": "The last time we checked the api integration status with the marketplace",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "marketplaceSysInfo": {
      "type": "object",
      "required": [
        "code",
        "name",
        "imageUrl",
        "status"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "name": {
          "type": "string",
          "example": "Cdiscount"
        },
        "imageUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "status": {
          "$ref": "#/definitions/marketplaceStatus"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3"
        },
        "merchantApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "offerImportationApiIntegration": {
          "$ref": "#/definitions/marketplaceApiIntegration"
        },
        "offerPublicationApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "orderImportationApiIntegration": {
          "$ref": "#/definitions/marketplaceApiIntegration"
        },
        "orderChangeApiIntegration": {
          "$ref": "#/definitions/marketplacePushApiIntegration"
        },
        "marketplaceAgentCount": {
          "type": "integer"
        },
        "importedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported offer count from the source marketplace"
        },
        "publishedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Effective offer count published to the target marketplace"
        },
        "importedOrderCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported order count from the marketplace"
        },
        "sourceOrderCount": {
          "type": "integer",
          "format": "int32"
        },
        "targetOrderCount": {
          "type": "integer",
          "format": "int32"
        },
        "targetTurnOver": {
          "type": "number",
          "format": "decimal"
        },
        "sourceTurnOver": {
          "type": "number",
          "format": "decimal"
        },
        "currencyCode": {
          "$ref": "#/definitions/currencyCode"
        },
        "targetMerchantCredentialCounter": {
          "type": "object",
          "description": "The key will be the credential status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "sourceMerchantCredentialCounter": {
          "type": "object",
          "description": "The key will be the credential status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "merchantSubscriptionCounter": {
          "type": "object",
          "description": "The key will be the subscription Status",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "merchantOfferPublicationCounter": {
          "type": "object",
          "description": "The key will be the offer publication Status",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    },
    "httpUrl": {
      "x-exclude": true,
      "description": "The URL <a href=\"https://en.wikipedia.org/wiki/URL\">https://en.wikipedia.org/wiki/URL</a>",
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "x-pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "example": "http://www.mydomain.com"
    },
    "marketplaceStatus": {
      "type": "string",
      "description": "Indicate the status of the marketplace",
      "enum": [
        "PROD",
        "TEST"
      ]
    },
    "marketplaceApiIntegrationStatus": {
      "type": "string",
      "enum": [
        "Up",
        "Down",
        "Paused"
      ]
    }
  },
  "parameters": {
    "acceptLanguageParameter": {
      "name": "Accept-Language",
      "description": "Indicates that the client accepts the following languages.",
      "in": "header",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "ifNoneMatchParameter": {
      "name": "If-None-Match",
      "type": "string",
      "in": "header",
      "required": false,
      "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
    },
    "pageSizeQueryStringParameter": {
      "name": "pageSize",
      "description": "The entry count you want to get",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "PageSize",
      "minimum": 25,
      "x-minimum": "25",
      "maximum": 1000,
      "x-maximum": "1000",
      "x-example": "25"
    },
    "pageNumberQueryStringParameter": {
      "name": "pageNumber",
      "description": "The page number you want to get",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "PageNumber",
      "minimum": 1,
      "x-minimum": "1",
      "x-example": "1"
    },
    "merchantCodeParameter": {
      "format": "MerchantCode",
      "name": "merchantCode",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The merchant code"
    }
  },
  "responses": {
    "GeneralError": {
      "description": "Occurs when something goes wrong",
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    }
  },
  "externalDocs": {
    "description": "Find the documentation for IMN's API here",
    "url": "https://api-docs.imn.io/"
  },
  "x-tagGroups": [
    {
      "name": "System API - List of Values",
      "tags": [
        "System API - List of Values - LOV"
      ]
    },
    {
      "name": "System - Merchants",
      "tags": [
        "System - Merchants - Merchants"
      ]
    },
    {
      "name": "System - Marketplaces",
      "tags": [
        "System - Marketplaces - Marketplaces"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  }
}